@model PaginatedList<Paper>

@{
    ViewData["Title"] = "ProgrammeCommitteeMember";
}

<h2>Submitted papers</h2>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6 col-xs-6">
            <form asp-action="Index" method="get">
                <div class="form-actions on-color">
                    <p>
                        Find: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                        <input type="submit" value="Search" class="btn btn-default" /> |
                        <a asp-action="Index">Back to Full List</a>
                    </p>
                </div>
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 col-md-offset-6 ">
            <a asp-action="AssignReviewer" class="btn btn-default">Assign Reviewers</a>
        </div>
        <div class="col-md-2 ">
            <a asp-action="ChoosePaper" class="btn btn-default">Qualifie Paper</a>
        </div>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleENGSortParam"]"> @Html.DisplayNameFor(model => model.First().TitleENG)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParam"]">@Html.DisplayNameFor(model => model.First().Author)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorsSortParam"]">@Html.DisplayNameFor(model => model.First().Authors)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ReviewerSortParam"]">@Html.DisplayNameFor(model => model.First().Reviewer)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParam"]">@Html.DisplayNameFor(model => model.First().Status)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TitleENG)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.ApplicationUser.Fullname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Authors)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Reviewer.ApplicationUser.Fullname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.PaperId">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
